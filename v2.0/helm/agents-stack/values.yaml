# Agent Marketplace v2.0 - Helm Values
# Enterprise Kubernetes deployment configuration

# Global settings
global:
  imageRegistry: "agentmarketplace"
  imageTag: "latest"
  pullPolicy: IfNotPresent
  
# License and API keys (set via --set or secrets)
licenseKey: ""
claudeApiKey: ""

# Replica configuration
replicaCount: 3
maxReplicas: 20
minReplicas: 2

# Resource limits
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 2000m
    memory: 4Gi

# Horizontal Pod Autoscaler
hpa:
  enabled: true
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Service configuration
service:
  type: LoadBalancer
  port: 80
  targetPort: 8080
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: agents.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: agents-tls
      hosts:
        - agents.yourdomain.com

# Agent-specific configuration
agents:
  ticketResolver:
    enabled: true
    replicas: 3
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  
  securityScanner:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  knowledgeBase:
    enabled: true
    replicas: 3
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  
  incidentResponder:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  dataProcessor:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  reportGenerator:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  deploymentAgent:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  
  auditAgent:
    enabled: true
    replicas: 1
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  workflowOrchestrator:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
  
  escalationManager:
    enabled: true
    replicas: 2
    resources:
      requests:
        cpu: 300m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi

# Database configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "agentmarketplace2024"
    database: "agentmarketplace"
  primary:
    persistence:
      enabled: true
      size: 20Gi
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: true
    password: "agentmarketplace2024"
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
    adminPassword: "admin"

# Security
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Environment variables
env:
  - name: ENVIRONMENT
    value: "production"
  - name: LOG_LEVEL
    value: "INFO"
  - name: METRICS_ENABLED
    value: "true"
