{{- range $agentName, $agentConfig := .Values.agents }}
{{- if $agentConfig.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "agents-stack.fullname" $ }}-{{ $agentName | kebabcase }}
  labels:
    {{- include "agents-stack.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $agentName | kebabcase }}
spec:
  replicas: {{ $agentConfig.replicas | default $.Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "agents-stack.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ $agentName | kebabcase }}
  template:
    metadata:
      labels:
        {{- include "agents-stack.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ $agentName | kebabcase }}
    spec:
      {{- with $.Values.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $agentName | kebabcase }}
          image: "{{ $.Values.global.imageRegistry }}/{{ $agentName | kebabcase }}:{{ $.Values.global.imageTag }}"
          imagePullPolicy: {{ $.Values.global.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "agents-stack.fullname" $ }}-secrets
                  key: license-key
            - name: CLAUDE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "agents-stack.fullname" $ }}-secrets
                  key: claude-api-key
            - name: AGENT_ID
              value: {{ $agentName | kebabcase }}
            - name: REDIS_URL
              value: "redis://:{{ $.Values.redis.auth.password }}@{{ include "agents-stack.fullname" $ }}-redis-master:6379"
            - name: POSTGRES_URL
              value: "postgresql://postgres:{{ $.Values.postgresql.auth.postgresPassword }}@{{ include "agents-stack.fullname" $ }}-postgresql:5432/{{ $.Values.postgresql.auth.database }}"
            {{- range $.Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml ($agentConfig.resources | default $.Values.resources) | nindent 12 }}
          {{- with $.Values.podSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
